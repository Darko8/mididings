# -*- python -*-

import os
from distutils import sysconfig

def boost_lib_name(lib):
    for libdir in ('/usr/lib', '/usr/local/lib'):
        for suffix in ('', '-mt'):
            libname = 'lib%s%s.so' % (lib, suffix)
            if os.path.isfile(os.path.join(libdir, libname)):
                return lib + suffix
    return lib

env = Environment(
#    CCFLAGS = [ '-O2', '-W', '-Wall', '-finline-functions', '-fvisibility=hidden' ],
    CCFLAGS = [ '-g', '-W', '-Wall' ],
    CPPDEFINES = [
#        'NDEBUG',
#        'ENABLE_DEBUG_FN',
#        'ENABLE_DEBUG_PRINT',
        'ENABLE_TEST',
#        'ENABLE_BENCHMARK',
        'ENABLE_ALSA_SEQ',
        'ENABLE_JACK_MIDI',
#        'ENABLE_SMF',
    ],
    CPPPATH = ['.'],
    ENV = os.environ,
    LIBS = [
        boost_lib_name('boost_python'),
        boost_lib_name('boost_thread'),
    ],
)

# hack to remove compiler flags from the distutils default.
# -Wstrict-prototypes is not valid for C++
cv_opt = sysconfig.get_config_var('CFLAGS')
cflags = [ x for x in cv_opt.split() if x not in ['-g', '-O2', '-Wstrict-prototypes', '-DNDEBUG'] ]
env.Append(CCFLAGS = cflags)

env.Append(
    CPPPATH = [sysconfig.get_python_inc(plat_specific=1)],
    LIBPATH = [sysconfig.get_python_lib(plat_specific=1)]
)

sources = [
    'backend.cc',
    'engine.cc',
    'patch.cc',
    'python_caller.cc',
    'python_module.cc',
]

env.ParseConfig('pkg-config --cflags --libs glib-2.0')

if 'ENABLE_ALSA_SEQ' in env['CPPDEFINES']:
    env.ParseConfig('pkg-config --cflags --libs alsa')
    sources.append('backend_alsa.cc')

env.ParseConfig('pkg-config --cflags --libs jack')
if 'ENABLE_JACK_MIDI' in env['CPPDEFINES']:
    sources.append('backend_jack.cc')

if 'ENABLE_SMF' in env['CPPDEFINES']:
    env.ParseConfig('pkg-config --cflags --libs smf')
    sources.append('backend_smf.cc')

env.SharedLibrary('_mididings', sources, SHLIBPREFIX='', SHOBJSUFFIX='.o')
